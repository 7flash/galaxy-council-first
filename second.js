import fetch from 'node-fetch';

import TelegramBot from 'node-telegram-bot-api';

import img from 'image-data-uri';

const sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms ?? 1000))

const encodeImage = (url) => {
    return img.encodeFromURL(url, {
    });
}

const Steps = {
    Starting: 1,
    CreateCharacter: 2,
    CreateWorld: 3,
    CreateWorldVoting: 4,
    ChapterOne: 5,
    ChapterOneVoting: 6,
    ChapterTwo: 7,
    ChapterTwoVoting: 8,
    ChapterThree: 9,
    ChapterThreeVoting: 10,
    ChapterFour: 11,
    ChapterFourVoting: 12,
    ChapterFive: 13,
    ChapterFiveVoting: 14,
    Results: 15,
    Evaluation: 16,
}

const token = '5445127737:AAGkBY-LW4cB7t5R6-u7vvU-L6CxMhqiYeA';

const bot = new TelegramBot(token, {polling: true});

bot.on('new_chat_members', (e) => {
    if (e.new_chat_member) {
      const fullName = `${e.new_chat_member.first_name} ${e.new_chat_member.last_name}`;
  
      bot.sendMessage(e.chat.id, `
      –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –ø—Ä–æ–≥—Ä–µ—Å—Å–æ—Ä "${fullName}"! –ú–∏—Ä–æ–≤–æ–π –°–æ–≤–µ—Ç üëÅ –æ–¥–æ–±—Ä–∏–ª –≤–∞—à–µ –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ –≤ –¥–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É –¥–ª—è —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π. –í—ã –ø–æ–ª—É—á–∏–ª–∏ –¥–æ—Å—Ç—É–ø –∫ –±–∞–∑–æ–≤–æ–º—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–æ–º—É —É—Ä–æ–≤–Ω—é —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π.
      
      –Ø –±–∞–∑–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ü—Ä–æ–≥—Ä–µ—Å—Å–æ—Ä v 0.26.2, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ø—Ä–æ–π—Ç–∏ –≤—Å–µ —ç—Ç–∞–ø—ã –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è. –î–ª—è –∑–∞–ø—É—Å–∫–∞ –Ω–æ–≤–æ–π —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ï—Å–ª–∏ –≤—ã –ø–æ–ø–∞–ª–∏ —Å—é–¥–∞ –≤–æ –≤—Ä–µ–º—è –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏—è –¥—Ä—É–≥–æ–π —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–æ–∂–¥–∞—Ç—å —Å–ª–µ–¥—É—é—â—É—é –≤ —Ä–æ–ª–∏ –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—è. –õ–∏–±–æ –ø—Ä–∏–º–∏—Ç–µ —É—á–∞—Å—Ç–∏–µ —Å –¥—Ä—É–≥–∏–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –≤ —Ç–µ–∫—É—â–µ–π. –í—ã–±–æ—Ä –≤—Å–µ–≥–¥–∞ –∑–∞ –≤–∞–º–∏ –∏ –¥–∞ –ø—Ä–µ–±—É–¥–µ—Ç —Å –≤–∞–º–∏ —Å–∏–ª–∞!
    `);
  
      bot.sendPhoto(e.chat.id, 'https://i.ibb.co/7CK7GkP/Slide-7-b.jpg');
  
    }
  });

  const openaiApi = 'https://labs.openai.com/api/labs/tasks'
  const authToken = 'sess-KEjsh2euYnMVvf2z0XXqvrpP5wcssggNa4CmXtc7'

  const getAllPictures = (prompt) => {
    return fetch(`${openaiApi}`, {
        method: "POST",
        body: JSON.stringify({
            task_type: "text2im",
            prompt: {
                caption: prompt + ' - colorful painting in the world of dungeon&dragons',
                batch_size: 4,
            },
        }),
        headers: {
            "Authorization": `Bearer ${authToken}`,
            "Content-Type": "application/json",
        }
    }).then(resp => resp.json())
        .then(async (task) => {
            const { id: taskId } = task;

            while (task.status == "pending") {
                await sleep(2000);

                task = await fetch(`${openaiApi}/${taskId}`, {
                    method: "GET",
                    headers: {
                        "Authorization": `Bearer ${authToken}`,
                    },
                }).then(resp => resp.json())
            }

            if (task.status == "rejected") throw new Error(task);

            return task.generations.data.map(item => item.generation.image_path);
        })
}

const endpointUrl = 'https://galaxy-db.gosleek.xyz/dev';

const headers = {
    "Content-Type": "application/json",
};

const publishPicture = async (imageDataURL, xn, yn) => {
    const fileId = await fetch(`${endpointUrl}/files`, {
        method: 'POST',
        headers: headers,
        body: JSON.stringify({
            dataURL: imageDataURL,
        }),
    }).then(res => res.json()).then(row => row.id);

    const size = 72;

    const response = await fetch(`${endpointUrl}/elements`, {
        method: 'POST',
        headers: headers,
        body: JSON.stringify({
            type: "image",
            width: size,
            height: size,
            x: size * xn,
            y: size * yn,
            fileId: fileId,
        })
    }).then(res => res.json())

    console.log(`published ${response.id}`)
}

let chatId;

let currentStep = Steps.Starting;

let users = [];

const responses2 = [
    '–ù–∞—á–∏–Ω–∞—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –Ω–æ–≤–æ–π —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...',
    `–ê–≤–∞—Ç–∞—Ä—ã –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–æ–π —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω—ã, –ø–µ—Ä–µ—Ö–æ–∂—É –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Ñ–∞–∑—É...`,
    `–ü—Ä–æ–µ–∫—Ü–∏—è –º–∏—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞. –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≥–æ—Ç–æ–≤—ã, –∏–Ω–∏—Ü–∏–∏—Ä—É—é —Å—Ç–∞—Ä—Ç —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏
    3...
    2...
    1...`,
    `–í–Ω–∏–º–∞–Ω–∏–µ! –°—Ç–∞—Ä—Ç–æ–≤—ã–π —ç—Ç–∞–ø —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏ –ø—Ä–æ–π–¥–µ–Ω. –ó–∞–ø—É—Å–∫–∞—é —ç—Ç–∞–ø 2...`,
    `–í–Ω–∏–º–∞–Ω–∏–µ! –≠—Ç–∞–ø 2 —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏ –ø—Ä–æ–π–¥–µ–Ω. –ó–∞–ø—É—Å–∫–∞—é —ç—Ç–∞–ø 3...`,
    `–í–Ω–∏–º–∞–Ω–∏–µ! –≠—Ç–∞–ø 3 —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏ –ø—Ä–æ–π–¥–µ–Ω. –ó–∞–ø—É—Å–∫–∞—é —ç—Ç–∞–ø 4...`,
    `–í–Ω–∏–º–∞–Ω–∏–µ! –≠—Ç–∞–ø 4 —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏ –ø—Ä–æ–π–¥–µ–Ω. –ó–∞–ø—É—Å–∫–∞—é —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —ç—Ç–∞–ø...`,
    `–í–Ω–∏–º–∞–Ω–∏–µ! –≠–∫—Å–ø–µ–¥–∏—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞, —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–∞—è —Å–∏–º—É–ª—è—Ü–∏—è –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∞. –ò–Ω–∏—Ü–∏–∏—Ä—É—é —Ä–µ—Ç—Ä–æ—Å–ø–µ–∫—Ç–∏–≤—É —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏ –¥–ª—è —É—Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞ –ü—Ä–æ–≥—Ä–µ—Å—Å–æ—Ä–∞.`,
    `–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤—ë—Ä—à—ë–Ω, –±–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ –≤–∞—à–µ —É—á–∞—Å—Ç–∏–µ!
    –°–ª–µ–¥—É—é—â–∞—è —ç–∫—Å–ø–µ–¥–∏—Ü–∏—è –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–∞—á–∞—Ç–∞ –Ω–µ —Ä–∞–Ω–µ–µ —á–µ–º —á–µ—Ä–µ–∑ 1 –º–∏–Ω—É—Ç—É.`
]

const photos = [
    'https://i.ibb.co/X8bCHJC/progressor-char.jpg',
    'https://i.ibb.co/9TNWWx2/progressor-world.jpg',
    'https://i.ibb.co/gFMYFxM/progressor-c1.jpg',
    'https://i.ibb.co/FJJXjd8/progressor-c2.jpg',
    'https://i.ibb.co/MDWNBwv/progressor-c3.jpg',
    'https://i.ibb.co/7J31JGY/progressor-c4.jpg',
    'https://i.ibb.co/tJs6057/progressor-c5.jpg',
    'https://i.ibb.co/Qf0Lknv/progressor-final.jpg',
]

const responses = [
    `
        –í–ù–ò–ú–ê–ù–ò–ï –ö–û–ú–ê–ù–î–ê! –ò–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–Ω –∑–∞–ø—É—Å–∫ –Ω–æ–≤–æ–π —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏, –ø—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å.
    
        –î–ª—è —Å—Ç–∞—Ä—Ç–∞ –∫–∞–∂–¥–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∞–≤–∞—Ç–∞—Ä –¥–ª—è —Ç–µ–∫—É—â–µ–π —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏.
    
        <b>–û–ø–∏—à–∏—Ç–µ, –∫–∞–∫ –≤—ã –µ–≥–æ –≤–∏–¥–∏—Ç–µ</b> <i>[–æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–¥–Ω–∏–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –Ω–∞ –ª—é–±–æ–º —è–∑—ã–∫–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π –¥–∞—Å—Ç –±–æ–ª–µ–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç) –∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è –∏ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∞/–≤—Ä–µ–º–µ–Ω–∞ –Ω–µ –≤–∞–∂–Ω—ã]</i>
        `,
    `
        –ü—Ä–æ–≥—Ä–µ—Å—Å–æ—Ä—ã! –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –º–∏—Ä–∞ –¥–ª—è —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏.

        <b>–û–ø–∏—à–∏—Ç–µ, –∫–∞–∫ –≤—ã –µ–≥–æ –≤–∏–¥–∏—Ç–µ</b> <i>[–æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–¥–Ω–∏–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –Ω–∞ –ª—é–±–æ–º —è–∑—ã–∫–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π –¥–∞—Å—Ç –±–æ–ª–µ–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç) –∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è –∏ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∞/–≤—Ä–µ–º–µ–Ω–∞ –Ω–µ –≤–∞–∂–Ω—ã]</i>
        `,
    `
        <b>–ì–ª–∞–≤–∞ 1: –ü—Ä–æ–ª–æ–≥.</b> –ü—Ä–æ–≥—Ä–µ—Å—Å–æ—Ä—ã! –≠–∫—Å–ø–µ–¥–∏—Ü–∏—è –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è, —ç—Ç–æ –Ω–∞—á–∞–ª—å–Ω—ã–π —ç—Ç–∞–ø, —Å–ø–ª–∞–Ω–∏—Ä—É–π—Ç–µ –µ–≥–æ.
        
        <b>–û–ø–∏—à–∏—Ç–µ, –∫–∞–∫ –≤—ã –µ–≥–æ –≤–∏–¥–∏—Ç–µ</b> <i>[–æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–¥–Ω–∏–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –Ω–∞ –ª—é–±–æ–º —è–∑—ã–∫–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π –¥–∞—Å—Ç –±–æ–ª–µ–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç) –∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è –∏ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∞/–≤—Ä–µ–º–µ–Ω–∞ –Ω–µ –≤–∞–∂–Ω—ã]</i>
    `,
    `
        <b>–ì–ª–∞–≤–∞ 2. –ü—Ä–æ–≥—Ä–µ—Å—Å–æ—Ä—ã!</b> –≠–∫—Å–ø–µ–¥–∏—Ü–∏—è –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è, —ç—Ç–æ –≤—Ç–æ—Ä–æ–π —ç—Ç–∞–ø, —Å–ø–ª–∞–Ω–∏—Ä—É–π—Ç–µ –µ–≥–æ.
        
        <b>–û–ø–∏—à–∏—Ç–µ, –∫–∞–∫ –≤—ã –µ–≥–æ –≤–∏–¥–∏—Ç–µ</b> <i>[–æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–¥–Ω–∏–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –Ω–∞ –ª—é–±–æ–º —è–∑—ã–∫–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π –¥–∞—Å—Ç –±–æ–ª–µ–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç) –∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è –∏ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∞/–≤—Ä–µ–º–µ–Ω–∞ –Ω–µ –≤–∞–∂–Ω—ã]</i>
    `,
    `
        <b>–ì–ª–∞–≤–∞ 3. –ü—Ä–æ–≥—Ä–µ—Å—Å–æ—Ä—ã!</b> –≠–∫—Å–ø–µ–¥–∏—Ü–∏—è –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è, —ç—Ç–æ —Ç—Ä–µ—Ç–∏–π —ç—Ç–∞–ø, —Å–ø–ª–∞–Ω–∏—Ä—É–π—Ç–µ –µ–≥–æ.
        
        <b>–û–ø–∏—à–∏—Ç–µ, –∫–∞–∫ –≤—ã –µ–≥–æ –≤–∏–¥–∏—Ç–µ</b> <i>[–æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–¥–Ω–∏–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –Ω–∞ –ª—é–±–æ–º —è–∑—ã–∫–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π –¥–∞—Å—Ç –±–æ–ª–µ–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç) –∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è –∏ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∞/–≤—Ä–µ–º–µ–Ω–∞ –Ω–µ –≤–∞–∂–Ω—ã]</i>
    `,
    `
        <b>–ì–ª–∞–≤–∞ 4. –ü—Ä–æ–≥—Ä–µ—Å—Å–æ—Ä—ã!</b> –≠–∫—Å–ø–µ–¥–∏—Ü–∏—è –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è, —ç—Ç–æ —á–µ—Ç–≤–µ—Ä—Ç—ã–π —ç—Ç–∞–ø, —Å–ø–ª–∞–Ω–∏—Ä—É–π—Ç–µ –µ–≥–æ.
        
        <b>–û–ø–∏—à–∏—Ç–µ, –∫–∞–∫ –≤—ã –µ–≥–æ –≤–∏–¥–∏—Ç–µ</b> <i>[–æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–¥–Ω–∏–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –Ω–∞ –ª—é–±–æ–º —è–∑—ã–∫–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π –¥–∞—Å—Ç –±–æ–ª–µ–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç) –∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è –∏ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∞/–≤—Ä–µ–º–µ–Ω–∞ –Ω–µ –≤–∞–∂–Ω—ã]</i>
    `,
    `
        <b>–ì–ª–∞–≤–∞ 5: –§–∏–Ω–∞–ª.</b> –ü—Ä–æ–≥—Ä–µ—Å—Å–æ—Ä—ã! –≠–∫—Å–ø–µ–¥–∏—Ü–∏—è –ø–æ–¥—Ö–æ–¥–∏—Ç –∫ –∫–æ–Ω—Ü—É, —ç—Ç–æ —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —ç—Ç–∞–ø, —Å–ø–ª–∞–Ω–∏—Ä—É–π—Ç–µ –µ–≥–æ.
        
        <b>–û–ø–∏—à–∏—Ç–µ, –∫–∞–∫ –≤—ã –µ–≥–æ –≤–∏–¥–∏—Ç–µ</b> <i>[–æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–¥–Ω–∏–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –Ω–∞ –ª—é–±–æ–º —è–∑—ã–∫–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π –¥–∞—Å—Ç –±–æ–ª–µ–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç) –∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è –∏ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∞/–≤—Ä–µ–º–µ–Ω–∞ –Ω–µ –≤–∞–∂–Ω—ã]</i>
    `,
    `
        –ü—Ä–æ–≥—Ä–µ—Å—Å–æ—Ä—ã! <b>–ú–∏—Ä–æ–≤–æ–π –°–æ–≤–µ—Ç üëÅ</b> –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ—Ç –≤–∞—à—É –∫–æ–º–∞–Ω–¥—É —Å —É—Å–ø–µ—à–Ω—ã–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–æ–π —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏.
        
        –¢–µ–ø–µ—Ä—å –æ–ø–∏—à–∏—Ç–µ –æ–¥–Ω–∏–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –≤–∞—à–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ —ç–º–æ—Ü–∏–∏ –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è. –°–∏—Å—Ç–µ–º–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–ª—è –≤–∞—Å –≤–∏–∑—É–∞–ª—å–Ω—ã–π –æ—Ç–ø–µ—á–∞—Ç–æ–∫.   
    `,
];
let nextResponseIdx = 0;

const intervalSec = 30;
const timerTick = 5;
const secondTimerTick = 5;
let alreadyBusy = false;

let pinnedMessageId = -1;

const nextPhase = async () => {
    try {
        await bot.unpinAllChatMessages(chatId);

        if (nextResponseIdx >= responses.length) {
            await bot.sendMessage(chatId, responses2[nextResponseIdx]);
            nextResponseIdx = 0;
        }
    
        let secondsRemaining = intervalSec;

        const messageWithTimer = await bot.sendMessage(chatId, `–¢–µ–∫—É—â–∞—è —Ñ–∞–∑–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è.`, {
            parse_mode: 'HTML'
        });
        pinnedMessageId = messageWithTimer.message_id;

        await bot.pinChatMessage(chatId, pinnedMessageId);

        while (secondsRemaining >= 0) {
            let secondsRemainingText = `${secondsRemaining}`.padStart(2, 0);

            const responseWithTimer = `
                –ò–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è.

                <b>00:${secondsRemainingText}</b> ‚è± - –≤—Ä–µ–º—è –¥–æ —Å–ª–µ–¥—É—é—â–µ–π —Ñ–∞–∑—ã
            `;
            
            await bot.editMessageText(responseWithTimer, {
                chat_id: chatId,
                message_id: pinnedMessageId,
                parse_mode: 'HTML'
            })
    
            secondsRemaining -= timerTick;

            await sleep(timerTick * 1000);
        }
        
        await bot.sendMessage(chatId, responses2[nextResponseIdx], {
            parse_mode: 'HTML',
        })

        await sleep(secondTimerTick * 1000);

        const nextPicture = photos[nextResponseIdx];

        await bot.sendPhoto(chatId, nextPicture);

        const nextResponse = responses[nextResponseIdx];
    
        await bot.sendMessage(chatId, nextResponse, {
            parse_mode: 'HTML'
        });

        nextResponseIdx++;
        alreadyBusy = false;
        users = [];
    } catch (err) {
        debugger;
    }
}

let xn = 0;
let yn = 0;

bot.on('message', async (e) => {
    if (!chatId)
        chatId = e.chat.id;

    try {
        const authorName = `${e.from.first_name} ${e.from.last_name}`

        const message = e.text;
        const authorId = e.from.id;
        const messageId = e.message_id;

        console.time(messageId);
        console.timeLog(messageId, message);

        if (!message) {
            console.timeLog(messageId, `deleted`);
            await bot.deleteMessage(chatId, e.message_id);
            return;
        }

        if (!alreadyBusy) {
            alreadyBusy = true;
            console.timeLog(messageId, 'new phase');
            setTimeout(() => nextPhase(), 100);
        }

        if (nextResponseIdx == 0) {
            console.timeLog(messageId, 'skip');
            return;
        }

        if (users.includes(authorId)) {
            console.timeLog(messageId, 'already proposed');            
            return;
        } else {
            users.push(authorId);
        }

        console.timeLog(messageId, 'starting in process');

        const pictures = await getAllPictures(message);

        // const pictures = [
        //     `https://i.ibb.co/v3S8Jmc/Screenshot-122.png`,
            // 'https://dog.ceo/api/breeds/image/random'
            // `https://picsum.photos/200`,
            // `https://picsum.photos/200`,
            // `https://picsum.photos/200`,
        // ]

        console.timeLog(messageId, 'getAllPictures done');

        for (const picture of pictures) {
            const pictureData = await encodeImage(picture);
            await publishPicture(pictureData, xn, yn);
            xn++;

            console.timeLog(messageId, `publishPicture done ${xn} ${yn}`);

            // await bot.sendPhoto(chatId, picture, {
            //     reply_to_message_id: messageId,
            // });

            bot.sendMessage(chatId, `<a href="${picture}">${message}</a> - ${authorName}`, {
                parse_mode: "HTML",
                reply_markup: {
                    inline_keyboard: [[{
                        text: 'üëç',
                        callback_data: 'yes'
                    }]]
                }
            });
    
            console.timeLog(messageId, 'sendPhoto done');
        }

        xn = 0;
        yn++;
    } catch (err) {
        console.error(err)
        // debugger;
        // bot.sendMessage(chatId, err.toString())
    }
})
